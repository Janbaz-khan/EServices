@model EServices.Models.Staff.Staff

@{
    ViewBag.Title = "AddEmployee";
    Layout = null;
}
@*<ol class="breadcrumb">
    <li><a href="@Url.Action("Index","Home")"><i class="fa fa-home"></i> Dashboard</a></li>
    <li><a href="@Url.Action("AddEmployee","Staff")"><i class="fa fa-plus"></i> Add Employee</a></li>
    <li><a href="@Url.Action("Index","Staff")"><i class="fa fa-desktop"></i> Details</a></li>
</ol>*@
<h2 class="text-center">Employee information</h2>
<hr />
  
@using (Html.BeginForm("AddEmployee","Staff",FormMethod.Post,new { enctype="multipart/form-data"}))
{
    @Html.AntiForgeryToken()
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label col-md-2" ,@Placeholder="type without dashes (11101xxxxxxxx)"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.Education, new[] {
                new SelectListItem() {Text = "MA/MSc"},
                new SelectListItem() {Text = "BA/BSc"},
                new SelectListItem() {Text = "BS(4 year)"},
                new SelectListItem() {Text = "MPhil/MS"}
                },"Select Education",new { @class="form-control"})
                    @Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" ,@Placeholder="92xxxxxxxxxx"} })
                    @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GenderId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.GenderId, ViewBag.Gender as SelectList, "Select Gender", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BasicSalary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BasicSalary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BasicSalary, "", new { @class = "text-danger" })
                </div>
            </div>
           



            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="ImageFile" accept="image/jpeg image/png" />
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-primary" />
                    <input type="reset" value="Close" class="btn btn-default" data-dismiss="modal" />
                </div>
            </div>
        </div>
}


<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
 
  
</script>