@model EServices.Models.StudentRegistrationModel

@{
    ViewBag.Title = "EditStudent";
    Layout = null;
}


@using (Html.BeginForm("EditStudent", "Admission", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-horizontal">
        @Html.AntiForgeryToken()
        <div class="row">



            <div class="col-md-6">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.AddmissionNo)
                @Html.HiddenFor(model => model.ParentId)
                <div class="form-group">
                    @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ClassId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ClassId, ViewBag.Classes as SelectList, "Select Class", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SibCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(a => a.SibCategory, new[] {
                      new SelectListItem{ Text="Sib-1"},
                      new SelectListItem{ Text="Sib-2"},
                      new SelectListItem{ Text="Sib-3"} ,
                      new SelectListItem{ Text="Sib-4"},
                      new SelectListItem{ Text="Orphan"} }
                      , "Select Sib Category", new { @class = "form-control val" })
                        @Html.ValidationMessageFor(model => model.SibCategory, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-6">



                <div class="form-group">
                    @Html.LabelFor(model => model.SectionId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SectionId, ViewBag.Sections as SelectList, "Select Section", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SectionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SessionId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SessionId, ViewBag.Sessions as SelectList, "Select Session", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SessionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddmissionDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AddmissionDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddmissionDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReligionId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ReligionId, ViewBag.Religion as SelectList, "Select Religion", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ReligionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GenderId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.GenderId, ViewBag.Gender as SelectList, "Select Gender", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <img src="@Url.Content(@Session["img"].ToString())" class="img-responsive" height="100" width="100" />
                        <input type="file" name="ImageFile" accept="" />
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>


            </div>


        </div>
        <center style="margin-top:40px;">
            <button type="submit" class="btn  btn-primary">Update</button>
            <button type="reset" data-dismiss="modal" class="btn  btn-default">Close</button>
        </center>
    </div>

}



<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
